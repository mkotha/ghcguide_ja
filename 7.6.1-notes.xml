<?xml version="1.0" encoding="iso-8859-1"?>
<sect1 id="release-7-6-1">
  <title>Release notes for version 7.6.1</title>

  <para>
    The significant changes to the various parts of the compiler are
    listed in the following sections. There have also been numerous bug
    fixes and performance improvements over the 7.4 branch.
  </para>

  <sect2>
    <title>Highlights</title>

    <para>
        The highlights, since the 7.4 branch, are:
    </para>

    <itemizedlist>
      <listitem>
        <para>
          Polymorphic kinds and data promotion are now fully implemented and
          supported features: <xref linkend="kind-polymorphism" />.
        </para>
      </listitem>

      <listitem>
        <para>
          Windows 64bit is now a supported platform.
        </para>
      </listitem>

      <listitem>
        <para>
          It is now possible to defer type errors until runtime using the
          <literal>-fdefer-type-errors</literal> flag: <xref
              linkend="defer-type-errors" />.
        </para>
      </listitem>

      <listitem>
        <para>
          The RTS now supports changing the number of capabilities at runtime
          with <literal>Control.Concurrent.setNumCapabilities</literal>: <xref
            linkend="parallel-options" />.
        </para>
      </listitem>
    </itemizedlist>
  </sect2>

  <sect2>
    <title>Full details</title>
    <sect3>
        <title>Language</title>
        <itemizedlist>
          <listitem>
            <para>
              There is a new extension <literal>ExplicitNamespaces</literal>
              that allows to qualify the export of a type with the
              <literal>type</literal> keyword.
            </para>
          </listitem>
          <listitem>
            <para>
              The behavior of the <literal>TypeOperator</literal> extension has
              changed: previously, only type operators starting with ":" were
              considered type constructors, and other operators were treated as
              type variables. Now type operators are always constructors.
            </para>
          </listitem>
          <listitem>
            <para>
              It is now possible to explicitly annotate types with kind
              variables (<ulink
                url="http://hackage.haskell.org/trac/ghc/ticket/5862">#5862</ulink>).
              You can now write, for example:
<programlisting>
class Category (c :: k -> k -> *) where
  type Ob c :: k -> Constraint
  id :: Ob c a => c a a
  (.) :: (Ob c a, Ob c b, Ob c c) => c b c -> c a b -> c a c
</programlisting>
              and the variable <literal>k</literal>, ranging over kinds, is in scope within the
              class declaration.
            </para>
          </listitem>
          <listitem>
            <para>
              It is now possible to derive instances of
              <literal>Generic1</literal> automatically. See <xref
                linkend="generic-programming" /> for more information.
            </para>
          </listitem>
          <listitem>
            <para>
              There is a new FFI calling convention <literal>capi</literal>,
              enabled by the <literal>CApiFFI</literal> extension. For example,
              given the following declaration:
<programlisting>
foreign import capi "header.h f" f :: CInt -> IO CInt
</programlisting>
              GHC will generate code to call <literal>f</literal> using the C
              API defined in the header <literal>header.h</literal>. Thus
              <literal>f</literal> can be called even if it may be defined as a
              CPP <literal>#define</literal>, rather than a proper function.
            </para>
          </listitem>
          <listitem>
            <para>
              There is a new pragma <literal>CTYPE</literal>, which can be used
              to specify the C type that a Haskell type corresponds to, when it
              is used with the <literal>capi</literal> calling convention.
            </para>
          </listitem>
          <listitem>
            <para>
              Generic default methods are now allowed for multi-parameter type classes.
            </para>
          </listitem>
          <listitem>
            <para>
              A constructor of a GADT is now considered infix (by a derived
              <literal>Show</literal> instance) if it is a two-argument
              operator with a fixity declaration (<ulink
                url="http://hackage.haskell.org/trac/ghc/ticket/5712">#5712</ulink>).
            </para>
          </listitem>
          <listitem>
            <para>
              There is a new extension <literal>InstanceSigs</literal>, which
              allows type signatures to be specified in instance declarations.
            </para>
          </listitem>
          <listitem>
            <para>
              GHC now supports numeric and string type literals (enabled by
              <literal>DataKinds</literal>), of kind <literal>Nat</literal> and
              <literal>Symbol</literal> respectively (see <xref
                  linkend="promoted-literals" />).
            </para>
          </listitem>
          <listitem>
            <para>
              The type <literal>Any</literal> can now be used as an argument
              for <literal>foreign prim</literal> functions.
            </para>
          </listitem>
          <listitem>
            <para>
              The <literal>mdo</literal> keyword has been reintroduced. This
              keyword can be used to create <literal>do</literal> expressions
              with recursive bindings. The behavior of the
              <literal>rec</literal> keyword has been changed, so that it does
              not perform automatic segmentation in a <literal>do</literal>
              expression anymore.
            </para>
          </listitem>
          <listitem>
            <para>
              There is a new syntactic construct (enabled by the <literal>LambdaCase</literal> extension)
              for creating an anonymous function out of a <literal>case</literal> expression. For example,
              the following expression:
<programlisting>
\case
    Nothing -> 0
    Just n  -> n
</programlisting>
              is equivalent to:
<programlisting>
\x -> case x of
    Nothing -> 0
    Just n  -> n
</programlisting>
              See <xref linkend="lambda-case" /> for more details.
            </para>
          </listitem>
          <listitem>
            <para>
              There is a new syntactic construct (enabled by the
              <literal>MultiWayIf</literal> extension) to create conditional
              expressions with multiple branches. For example, you can now
              write:
<programlisting>
if | x == 0    -> [...]
   | x &gt; 1     -> [...]
   | x &lt; 0     -> [...]
   | otherwise -> [...]
</programlisting>
              See <xref linkend="multi-way-if" /> for more information.
            </para>
          </listitem>
          <listitem>
            <para>
              Some limitations on the usage of unboxed tuples have been lifted.
              For example, when the <literal>UnboxedTuples</literal> extension
              is on, an unboxed tuple can now be used as the type of a
              constructor, function argument, or variable:
<programlisting>
data Foo = Foo (# Int, Int #)

f :: (# Int, Int #) -&gt; (# Int, Int #)
f x = x

g :: (# Int, Int #) -&gt; Int
g (# a,b #) = a

h x = let y = (# x,x #) in ...
</programlisting>
            </para>
            <para>
              Unboxed tuple can now also be nested:
<programlisting>
f :: (# Int, (# Int, Int #), Bool #)
</programlisting>
            </para>
          </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>Compiler</title>
        <itemizedlist>
          <listitem>
             <para>
               The <literal>-package</literal> flag now correctly loads only
               the most recent version of a package (<ulink
                 url="http://hackage.haskell.org/trac/ghc/ticket/7030">#7030</ulink>).
             </para>
           </listitem>
          <listitem>
             <para>
               In <literal>--make</literal> mode, GHC now gives an indication
               of why a module is being recompiled.
             </para>
          </listitem>
          <listitem>
            <para>
              There is a new flag <literal>-freg-liveness</literal> flag to control if
                STG liveness information is used for optimisation. The flag is
                enabled by default.
            </para>
          </listitem>
          <listitem>
            <para>
              Package database flags have been renamed from
              <literal>-package-conf*</literal> to
              <literal>-package-db*</literal>.
            </para>
          </listitem>
          <listitem>
            <para>
              It is now possible to hide the global package db, and specify the
              order of the user and global package databases in the stack (see
              <xref linkend="package-databases" />).
            </para>
          </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>GHCi</title>
        <itemizedlist>
           <listitem>
              <para>
                Commands defined later have now precedence in the resolution of
                abbreviated commands (<ulink
                  url="http://hackage.haskell.org/trac/ghc/ticket/3858">#3858</ulink>).
              </para>
           </listitem>
           <listitem>
              <para>
                It is now possible to specify a custom pretty-printing function
                for expressions evaluated at the prompt using the
                <literal>-interactive-print</literal> flag.
              </para>
           </listitem>
           <listitem>
              <para>
                GHCi now supports loading additional <literal>.ghci</literal>
                files via the <literal>-ghci-script</literal> flag (<ulink
                  url="http://hackage.haskell.org/trac/ghc/ticket/5265">#5265</ulink>).
              </para>
           </listitem>
           <listitem>
              <para>
                A new <literal>:seti</literal> command has been introduced,
                which sets an option that applies only at the prompt.
              </para>
           </listitem>
           <listitem>
              <para>
                Files are now reloaded after having been edited with the <literal>:edit</literal> command.
              </para>
           </listitem>
           <listitem>
              <para>
                <literal>default</literal> declarations can now be entered at the GHCi prompt.
              </para>
           </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>Template Haskell</title>
        <itemizedlist>
           <listitem>
              <para>
                Promoted kinds and kind polymorphism are now supported in
                Template Haskell.
              </para>
           </listitem>
           <listitem>
              <para>
                It is now possible to create fixity declarations in Template
                Haskell (<ulink
                  url="http://hackage.haskell.org/trac/ghc/ticket/1541">#1541</ulink>).
              </para>
           </listitem>
           <listitem>
              <para>
                Primitive byte-array literals can now be created with Template
                Haskell (<ulink
                  url="http://hackage.haskell.org/trac/ghc/ticket/5877">#5877</ulink>).
              </para>
           </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>Runtime system</title>
        <itemizedlist>
            <listitem>
              <para>
                The presentation of parallel GC work balance in <literal>+RTS
                  -s</literal> is now expressed as a percentage value (with
                100% being "perfect") instead of a number from 1 to N, with N
                being the number of capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                The RTS now supports changing the number of capabilities at runtime
                with <literal>Control.Concurrent.setNumCapabilities</literal>: <xref
                  linkend="parallel-options" />.
              </para>
            </listitem>
            <listitem>
              <para>
                The internal timer is now based on a monotonic clock in both
                the threaded and non-threaded RTS, on all tier-1 platforms.
              </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>Build system</title>
        <itemizedlist>
           <listitem>
              <para>
                GHC >= 7.0 is now required for bootstrapping.
              </para>
           </listitem>
           <listitem>
              <para>
                Windows 64bit is now a supported platform.
              </para>
           </listitem>
        </itemizedlist>
    </sect3>
  </sect2>

  <sect2>
    <title>Libraries</title>

    <para>
        There have been some changes that have effected multiple
        libraries:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                The deprecated function <literal>catch</literal> has been
                removed from <literal>Prelude</literal>.
            </para>
        </listitem>
    </itemizedlist>

    <para>
        The following libraries have been removed from the GHC tree:
    </para>

    <itemizedlist>
        <listitem>
            <para>extensible-exceptions</para>
        </listitem>
        <listitem>
            <para>mtl</para>
        </listitem>
    </itemizedlist>

    <para>
        The following libraries have been added to the GHC tree:
    </para>

    <itemizedlist>
        <listitem>
            <para>tranformers (version 0.3.0.0)</para>
        </listitem>
    </itemizedlist>

    <sect3>
        <title>array</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 0.4.0.1 (was 0.4.0.0)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>base</title>
        <itemizedlist>
           <listitem>
              <para>
                Version number 4.6.0.0 (was 4.5.1.0)
              </para>
           </listitem>
           <listitem>
              <para>
                The <literal>Text.Read</literal> module now exports functions
<programlisting>
readEither :: Read a => String -> Either String a
readMaybe :: Read a => String -> Maybe a
</programlisting>
              </para>
           </listitem>
           <listitem>
              <para>
                An infix alias for <literal>mappend</literal> in <literal>Data.Monoid</literal> has been introduced:
<programlisting>
(&lt;&gt;) :: Monoid m => m -> m -> m
</programlisting>

              </para>
           </listitem>
           <listitem>
              <para>
                The <literal>Bits</literal> class does not have a <literal>Num</literal> superclass anymore.
              </para>
              <para>
                You can make code that works with both
                Haskell98/Haskell2010 and GHC by:
                <itemizedlist>
                  <listitem>
                    <para>
                      Whenever you make a <literal>Bits</literal> instance
                      of a type, also make <literal>Num</literal> instance, and
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Whenever you give a function, instance or class a
                      <literal>Bits t</literal> constraint, also give it
                      a <literal>Num t</literal> constraint.
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
           </listitem>
           <listitem>
              <para>
                <literal>Applicative</literal> and
                <literal>Alternative</literal> instances for the
                <literal>ReadP</literal> and <literal>ReadPrec</literal> monads
                have been added.
              </para>
           </listitem>
           <listitem>
              <para>
                <literal>foldl'</literal> and <literal>foldr'</literal> in
                <literal>Data.Foldable</literal> are now methods of the
                <literal>Foldable</literal> class.
              </para>
           </listitem>
           <listitem>
              <para>
                The deprecated <literal>Control.OldException</literal> module has now been removed.
              </para>
           </listitem>
           <listitem>
              <para>
                Strict versions of <literal>modifyIORef</literal> and <literal>atomicModifyIORef</literal> have been added to the <literal>Data.IORef</literal> module:
<programlisting>
modifyIORef' :: IORef a -> (a -> a) -> IO ()
atomicModifyIORef' :: IORef a -> (a -> (a,b)) -> IO b
</programlisting>
              </para>
              <para>
                Similarly, a strict version of <literal>modifySTRef</literal>
                has been added to <literal>Data.STRef</literal>.
              </para>
           </listitem>
           <listitem>
              <para>
                A bug in the fingerprint calculation for
                <literal>TypeRep</literal> (<ulink
                  url="http://hackage.haskell.org/trac/ghc/ticket/5962">#5962</ulink>)
                has been fixed.
              </para>
           </listitem>
           <listitem>
              <para>
                A new function <literal>lookupEnv</literal> has been added to
                <literal>System.Environment</literal>, which behaves like
                <literal>getEnv</literal>, but returns
                <literal>Nothing</literal> when the environment variable is
                not defined, instead of throwing an exception.
              </para>
           </listitem>
           <listitem>
              <para>
                There is a new function <literal>getGCStatsEnabled</literal> in
                <literal>GHC.Stats</literal>, which checks whether GC stats
                have been enabled (for example, via the <literal>-T</literal>
                RTS flag).
              </para>
           </listitem>
           <listitem>
              <para>
                <literal>QSem</literal> in
                <literal>Control.Concurrent</literal> is now deprecated, and
                will be removed in GHC 7.8. Please use an alternative, e.g. the
                SafeSemaphore package, instead.
              </para>
           </listitem>
           <listitem>
              <para>
                A new function <literal>getExecutablePath</literal> has been
                added to <literal>System.Environment</literal>. This function
                returns the full path of the current executable, as opposed to
                <literal>getProgName</literal>, which only returns the base
                name.
              </para>
           </listitem>
           <listitem>
              <para>
                The <literal>Data.HashTable</literal> module is now deprecated,
                and will be removed in GHC 7.8. Please use an alternative, e.g.
                the hashtables package, instead.
              </para>
           </listitem>
           <listitem>
              <para>
                The <literal>Data.Ord</literal> module now exports the
                <literal>Down</literal> <literal>newtype</literal>, which
                reverses the sort order of its argument.
              </para>
           </listitem>

        </itemizedlist>
    </sect3>

    <sect3>
        <title>bin-package-db</title>
        <itemizedlist>
            <listitem>
                <para>
                    This is an internal package, and should not be used.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>binary</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 0.5.1.1 (was 0.5.1.0)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>bytestring</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 0.10.0.0 (was 0.9.2.1)
                </para>
            </listitem>
            <listitem>
                <para>
                    A new module
                    <literal>Data.ByteString.Lazy.Builder</literal> has been
                    added.
                </para>
                <para>
                    The new module defines a <literal>Builder</literal> monoid,
                    which allows to efficiently construct bytestrings by
                    concatenation. Possible applications include binary
                    serialization, targets for efficient pretty-printers, etc.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>Cabal</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.16.0 (was 1.14.0)
                </para>
            </listitem>

            <listitem>
                <para>
                    For details of the changes to the Cabal library,
                    please see the Cabal changelog.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>containers</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 0.5.0.0 (was 0.4.2.1)
                </para>
            </listitem>

            <listitem>
                <para>
                    See <ulink
                        url="http://www.haskell.org/pipermail/haskell-cafe/2012-May/101082.html">the
                        announcement</ulink> for details of the changes to the
                    containers library.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>deepseq</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.3.0.1 (was 1.3.0.0)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>directory</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.2.0.0 (was 1.1.0.2)
                </para>
            </listitem>
            <listitem>
                <para>
                    The dependency on the old-time package has been changed to time.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>filepath</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.3.0.1 (was 1.3.0.0)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>ghc-prim</title>
        <itemizedlist>
            <listitem>
                <para>
                    This is an internal package, and should not be used.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>haskell98</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 2.0.0.2 (was 2.0.0.1)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>haskell2010</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.1.1.0 (was 1.1.0.1)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>hoopl</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 3.9.0.0 (was 3.8.7.3)
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Compiler.Hoopl.Block</literal> now contains the
                    Block datatype and all the operations on blocks.
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Compiler.Hoopl.Graph</literal> now has the
                    operations on Graphs.
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Compiler.Hoopl.Util</literal> and
                    <literal>Compiler.Hoopl.GraphUtil</literal> have been
                    removed; their contents have been moved to other modules.
                </para>
            </listitem>
            <listitem>
                <para>The Dataflow algorithms have been optimized.</para>
            </listitem>
            <listitem>
                <para>Numerous other API changes.</para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>hpc</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 0.6.0.0 (was 0.5.1.1)
                </para>
            </listitem>
            <listitem>
                <para>
                    The dependency on the old-time package has been changed to time.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>integer-gmp</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 0.5.0.0 (was 0.4.0.0)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>old-locale</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.0.0.5 (was 1.0.0.4)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>old-time</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.1.0.1 (was 1.1.0.0)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>process</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.1.0.2 (was 1.1.0.1)
                </para>
            </listitem>
            <listitem>
                <para>
                    Asynchronous exception bugs in
                    <literal>readProcess</literal> and
                    <literal>readProcessWithExitCode</literal> have been fixed.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>template-haskell</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 2.8.0.0 (was 2.7.0.0)
                </para>
            </listitem>
            <listitem>
                <para>
                    Promoted kinds and kind polymorphism are now supported in Template Haskell.
                </para>
            </listitem>
            <listitem>
                <para>
                    Fixity declarations have been added to Template Haskell.
                </para>
            </listitem>
            <listitem>
                <para>
                    The <literal>StringPrimL</literal> constructor for
                    <literal>Lit</literal> now takes a <literal>Word8</literal>
                    array, instead of a <literal>String</literal>.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>time</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 1.4.1 (was 1.4)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>unix</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 2.6.0.0 (was 2.5.1.1)
                </para>
            </listitem>
            <listitem>
                <para>
                    Bindings for <literal>mkdtemp</literal> and <literal>mkstemps</literal> have been added.
                </para>
            </listitem>
            <listitem>
                <para>
                    New functions <literal>setEnvironment</literal> and <literal>cleanEnv</literal> have been added.
                </para>
            </listitem>
            <listitem>
                <para>
                    Bindings for functions to access high resolution timestamps have been added.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3>
        <title>Win32</title>
        <itemizedlist>
            <listitem>
                <para>
                    Version number 2.3.0.0 (was 2.2.2.0)
                </para>
            </listitem>
        </itemizedlist>
    </sect3>
  </sect2>
</sect1>

